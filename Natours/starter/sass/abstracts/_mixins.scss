@mixin clearfix{
    &::after{
       content:""; //  content is must even if empty
       display: table; //  not clear why it is needed
       clear: both;
      } 
}

@mixin absCenter {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

/* media queries
    using desktop fitst approach we will use : 
        - max-width for devices below desktop i.e. phone , tablet
        - min-width for device above desktop i.e. big desktop

    0-600px         : phone
    600-900px       : tablet portrait
    900-1200px      : tablet landscape
    1200 - 1800px   : desktop
    1800 -          : big desktop 

*/

// @mixin respond-phone{

//     @media (max-width : 600px){
//         @content
//     }
// }



 /*  
    breakpoint choices :
    - phone
    - tab-port (tablet portrait)
    - tab-land (tablet landscape)
    - big-desktop 
   
    he does not want to use px and also say that rem is not good for media queries
    instead he used em (where 1em is 16 px) which will reflect changes that the use do on the browser font-size
*/
  @mixin respond ($breakpoint){
    @if $breakpoint == phone{
        @media (max-width : 37.5em){    // 600px
            @content
        }
    }

    @if $breakpoint == tab-port{
        @media (max-width : 56.25em){     // 900px
            @content
        }
    }

    @if $breakpoint == tab-land{
        @media (max-width : 75em){    // 1200px
            @content
        }
    }

    @if $breakpoint == big-desktop{     // 1800px
        @media (min-width : 112.5em){
            @content
        }
    }

  }